Bootstrap: docker
From: almalinux:9

%setup

%files
    ../../external/Miniconda3-py39_24.9.2-0-Linux-x86_64.sh /opt
    ../../external/htslib.tar.gz /opt
    ../../external/bcftools.tar.gz /opt
    ../../external/samtools.tar.gz /opt
    ../../external/ncbi-vdb.tar.gz /opt
    ../../external/sra-tools.tar.gz /opt
    ../../external/bedtools2.tar.gz /opt
    ../../external/ncbi-blast-2.16.0+-x64-linux.tar.gz /opt
    ../../external/seqkit_linux_amd64.2.9.0.tar.gz /opt
    ../../external/cdhit.tar.gz /opt
    ../../external/cutadapt.tar.gz /opt
    ../../external/prinseq.tar.gz /opt
    ../../external/bwa.tar.gz /opt
    ../../external/fastqc_v0.12.1.zip /opt
    ../../external/falco.tar.gz /opt
    ../../external/spades.tar.gz /opt
    ../../external/Prodigal.tar.gz /opt
    ../../external/hmmer.tar.gz /opt
    ../../external/diamond.tar.gz /opt
    ../../external/bowtie.tar.gz /opt
    ../../external/MetaPhlAn.tar.gz /opt
    ../../external/MetaPhlAn2.tar.gz /opt
    ../../external/megahit.tar.gz /opt
    ../../external/VirSorter.tar.gz /opt
    ../../external/VirSorter2.tar.gz /opt
    ../../external/mpa_v20_m200.zip /opt
    ../../external/mga_x86_64.tar.gz /opt
    ../../external/virsorter-data-v2.tar.gz /opt

%post
    dnf -y install \
        git-2.43.5-2.el9_5 \
        pigz-2.5-4.el9 \
        gcc-c++-11.5.0-2.el9.alma.1 \
        make-1:4.3-8.el9 \
        zlib-devel-1.2.11 \
        cmake-3.26.5-2.el9 \
        xz-devel-5.2.5-8.el9_0 \
        autoconf-2.69-39.el9 \
        automake-1.16.2-8.el9 \
        bzip2-devel-1.0.8-8.el9 \
        libcurl-devel-7.76.1-31.el9 \
        ncurses-devel-6.2-10.20210508.el9 \
        gsl-devel-2.6-7.el9 \
        flex-2.6.4-9.el9 \
        bison-3.7.4-5.el9 \
        libxml2-devel-2.9.13-6.el9_4 \
        java-21-openjdk-devel-1:21.0.5.0.11-2.el9.alma.1 \
        which-2.21-29.el9 \
        perl-4:5.32.1-481.el9 \
        unzip-6.0-57.el9

    pushd /opt
        # install miniconda
        echo "############ miniconda ###############"
        sh Miniconda3-py39_24.9.2-0-Linux-x86_64.sh -b -p /opt/miniconda3

        # install python libraries
        echo "############ python libraries ###############"
        /opt/miniconda3/bin/conda config --add channels conda-forge
        /opt/miniconda3/bin/conda config --append channels bioconda
        /opt/miniconda3/bin/conda install -y \
            python=3 numpy=1.26.4 mcl=14.137 muscle=5.3 perl-bioperl=1.7.8 perl-file-which=1.24 \
            perl-parallel-forkmanager=2.03 perl-list-moreutils=0.430 \
            python=3 scikit-learn=1.0.2 imbalanced-learn=0.12.4 pandas=2.2.3 \
            seaborn=0.13.2 screed=1.1.3 ruamel.yaml=0.18.10 click=8.1.8 \
            python-irodsclient=2.1.0 snakemake=5.16.0 \
            conda-libmamba-solver=24.11.1 libmamba=2.0.5 libmambapy=2.0.5 \
            biom-format=2.1.16 h5py=3.12.1 libarchive=3.7.7
            
        # install bowtie2
        echo "############ bowtie2 ###############"
        /opt/miniconda3/bin/conda install -y \
            bowtie2=2.5.4
            
        # install metaphlan
        echo "############ metaphlan ###############"
        tar -I pigz -xvf MetaPhlAn.tar.gz
        chown -R $(whoami) MetaPhlAn
        /opt/miniconda3/bin/pip install -e MetaPhlAn

        # install metaphlan2
        echo "############ metaphlan2 ###############"
        tar -I pigz -xvf MetaPhlAn2.tar.gz
        mkdir -p MetaPhlAn2/db_v20
        unzip -d MetaPhlAn2/db_v20 /opt/mpa_v20_m200.zip
        chown -R $(whoami) MetaPhlAn2

        # install bbmap
        echo "############ bbmap ###############"
        /opt/miniconda3/bin/conda install -y bbmap=39.13

        # install htslib
        echo "############ htslib ###############"
        tar -I pigz -xvf htslib.tar.gz
        chown -R $(whoami) htslib
        pushd htslib
            autoreconf
            ./configure
            make -j$(nproc)
            make install
        popd

        # install bcftools
        echo "############ bcftools ###############"
        tar -I pigz -xvf bcftools.tar.gz
        chown -R $(whoami) bcftools
        pushd bcftools
            autoreconf
            ./configure
            make -j$(nproc)
            make install
        popd

        # install samtools
        echo "############ samtools ###############"
        tar -I pigz -xvf samtools.tar.gz
        chown -R $(whoami) samtools
        pushd samtools
            autoreconf
            ./configure
            make -j$(nproc)
            make install
        popd

        # install ncbi-vdb
        echo "############ ncbi-vdb ###############"
        tar -I pigz -xvf ncbi-vdb.tar.gz
        chown -R $(whoami) ncbi-vdb
        pushd ncbi-vdb
            pushd build
                cmake ..
                make -j$(nproc)
                make install
            popd
        popd

        # install sra-tools
        echo "############ sra-tools ###############"
        tar -I pigz -xvf sra-tools.tar.gz
        chown -R $(whoami) sra-tools
        pushd sra-tools
            pushd build
                cmake .. -D VDB_LIBDIR=/usr/local/lib64 -D USE_SRA=1 -D USE_SAIS=1
                make -j$(nproc)
                make install
            popd
        popd

        # install bedtools2
        echo "############ bedtools2 ###############"
        tar -I pigz -xvf bedtools2.tar.gz
        chown -R $(whoami) bedtools2
        pushd bedtools2
            make autoversion
            make -j$(nproc)
            make install
        popd
 
        # install blast
        echo "############ blast ###############"
        tar -I pigz -xvf ncbi-blast-2.16.0+-x64-linux.tar.gz
        chown -R $(whoami) ncbi-blast-2.16.0+

        # install seqkit
        echo "############ seqkit ###############"
        tar -I pigz -xvf seqkit_linux_amd64.2.9.0.tar.gz
        chown $(whoami) seqkit
        mv -f seqkit /usr/local/bin

        # install cdhit
        echo "############ cdhit ###############"
        tar -I pigz -xvf cdhit.tar.gz
        chown -R $(whoami) cdhit
        pushd cdhit
            make -j$(nproc)
            make install
            # install auxtools
            pushd cd-hit-auxtools
                make -j$(nproc)
                cp -f cd-hit-dup cd-hit-lap read-linker /usr/local/bin
            popd
        popd

        # install cutadapt
        echo "############ cutadapt ###############"
        tar -I pigz -xvf cutadapt.tar.gz
        chown -R $(whoami) cutadapt
        /opt/miniconda3/bin/pip install cutadapt

        # install prinseq
        echo "############ prinseq ###############"
        tar -I pigz -xvf prinseq.tar.gz
        chown -R $(whoami) prinseq
        chmod +x prinseq/*.pl

        # install bwa
        echo "############ bwa ###############"
        tar -I pigz -xvf bwa.tar.gz
        chown -R $(whoami) bwa
        pushd bwa
            make -j$(nproc)
            #make install
        popd

        # install fastqc
        echo "############ fastqc ###############"
        unzip fastqc_v0.12.1.zip
        chown -R $(whoami) FastQC

        # install falco
        # cf) https://kazumaxneo.hatenablog.com/entry/2024/04/20/011400
        echo "############ falco ###############"
        tar -I pigz -xvf falco.tar.gz
        chown -R $(whoami) falco
        pushd falco
            ./autogen.sh
            ./configure CXXFLAGS="-O3 -Wall" --enable-hts
            make -j$(nproc) HAVE_HTSLIB=1 all
            make HAVE_HTSLIB=1 install
        popd

        # install spades
        echo "############ spades ###############"
        tar -I pigz -xvf spades.tar.gz
        chown -R $(whoami) spades
        pushd spades
           ./spades_compile.sh
        popd

        # install prodigal
        echo "############ prodigal ###############"
        tar -I pigz -xvf Prodigal.tar.gz
        chown -R $(whoami) Prodigal
        pushd Prodigal
            make -j$(nproc)
            make install
        popd

        # install hmmer
        echo "############ hmmer ###############"
        tar -I pigz -xvf hmmer.tar.gz
        chown -R $(whoami) hmmer
        pushd hmmer
            autoconf
            ./configure
            make -j$(nproc)
            make install
        popd

        # install megahit
        echo "############ megahit ###############"
        tar -I pigz -xvf megahit.tar.gz
        chown -R $(whoami) megahit
        pushd megahit
            mkdir -p build
            pushd build
                cmake .. -DCMAKE_BUILD_TYPE=Release
                make -j$(nproc)
                make install
            popd
        popd

        # install diamond
        echo "############ diamond ###############"
        tar -I pigz -xvf diamond.tar.gz
        chown -R $(whoami) diamond
        pushd diamond
            mkdir build
            pushd build
                cmake ..
                make -j$(nproc)
                make install
            popd
        popd

        # install bowtie
        echo "############ bowtie ###############"
        tar -I pigz -xvf bowtie.tar.gz
        chown -R $(whoami) bowtie
        pushd bowtie
            make -j$(nproc)
            make install
        popd

        # install virsorter
        echo "############ virsorter ###############"
        tar -I pigz -xvf VirSorter.tar.gz
        chown -R $(whoami) VirSorter
        pushd VirSorter
            pushd Scripts
                make clean
                make -j$(nproc)
            popd
            # install MetaGeneAnnotator
            tar -I pigz -xvf /opt/mga_x86_64.tar.gz -C .
            # install database
            tar -I pigz -xvf /opt/virsorter-data-v2.tar.gz -C .
        popd

        # install virsorter2
        echo "############ virsorter2 ###############"
        tar -I pigz -xvf VirSorter2.tar.gz
        chown -R $(whoami) VirSorter2
        pushd VirSorter2
            /opt/miniconda3/bin/pip install -e .
        popd
    popd

%environment
    export LC_ALL=C
    export PATH=/opt/miniconda3/bin:$PATH
    export PATH=/opt/ncbi-blast-2.16.0+/bin:$PATH
    export PATH=/opt/prinseq:$PATH
    export PATH=/opt/bwa:$PATH
    export PATH=/opt/FastQC:$PATH
    export PATH=/opt/spades/bin:$PATH
    export PATH=/opt/VirSorter:$PATH
    export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH

%runscript
